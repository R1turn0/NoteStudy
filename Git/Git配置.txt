Git配置

打开Git Bash，输入
$ git config --global user.name "your_name"
$ git config --global user.email "your_email"

输入查看Git所有配置以及他们所在的文件
$ git config --list --show-origin

更改Git的文本编辑器
$ git config --global core.editor vim
或使用64位的Notepad++
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin

生成Git密钥
进入到user文件夹下的\.ssh
$ ssh-keygen -t rsa
用文本编辑器打开.pub文件，复制到Github设置中

启动ssh链接
$ ssh-agent.exe

手动添加私钥文件
$ ssh-add ~/.ssh/R1turn0

测试能否ssh到github
$ ssh -T git@github.com

代理配置

HTTP协议代理配置
--global表示全局，可以不加
$ git config --global https.proxy ***
例子：
# socks
$ git config --global http.proxy 'socks5://127.0.0.1:1080' 
$ git config --global https.proxy 'socks5://127.0.0.1:1080'
$ # http
$ git config --global http.proxy http://127.0.0.1:1080 
$ git config --global https.proxy https://127.0.0.1:1080
# 只对github.com使用代理，其他仓库不走代理
$ git config --global http.https://github.com.proxy socks5://127.0.0.1:1080
$ git config --global https.https://github.com.proxy socks5://127.0.0.1:1080
# 取消github代理
$ git config --global --unset http.https://github.com.proxy
$ git config --global --unset https.https://github.com.proxy

直接修改~/.gitconfig文件
[http]
$ proxy = socks5://127.0.0.1:1080
[https]
$ proxy = socks5://127.0.0.1:1080

取消代理
git config --global --unset http.proxy
git config --global --unset https.proxy

SSH协议代理设置
修改ssh配置文件~/.ssh/config
没有的话新建一个文件
Windows ssh配置文件路径：C:\Users\你的用户名\.ssh\config
Linux ssh配置文件路径：/home/你的用户名/.ssh/config
$ ProxyCommand connect -S 代理地址:端口 %h %p
例子：
# 全局
# ProxyCommand connect -S 127.0.0.1:1080 %h %p
# 只为特定域名设定
$ Host github.com gitlab.com
$ ProxyCommand connect -S 127.0.0.1:1080 %h %p
-S 代表走socks代理。（ -H 实现http和https的仓库的克隆）
多个地址设置：Host后面使用空格隔开，而不是“，”

多账号设置
生成公私钥，并在对应账号配置公钥
// 生成两个邮箱对应的ssh公私钥
$ ssh-keygen -t ed25519 -C "1@email"
$ ssh-keygen -t ed25519 -C "2@email"
例子：
# Host：仓库网站的别名，随意取
# HostName：仓库网站的域名（PS：IP 地址应该也可以）
# User：仓库网站上的用户名
# IdentityFile：私钥的绝对路径
$ Host aa.github.com 
$ Hostname ssh.github.com
$ Port 22
$ User git
$ PreferredAuthentications publickey
$ IdentityFile ~/.ssh/id_aa
$ ProxyCommand connect -S 127.0.0.1:1080 %h %p

$ Host bb.github.com 
$ Hostname ssh.github.com
$ Port 22
$ User git
$ PreferredAuthentications publickey
$ IdentityFile ~/.ssh/id_bb
$ ProxyCommand connect -S 127.0.0.1:1080 %h %p
测试：
$ ssh -vT git@github.com 
$ ssh -vT git@aa.github.com 
$ ssh -vT git@bb.github.com 


Permission denied (publickey).
打开命令行。

在后台启动 SSH 代理。

$ ssh-agent -s
> Agent pid 59566
查找并记下您的公钥指纹。

$ ssh-add -l -E sha256
> 2048 SHA256:274ffWxgaxq/tSINAykStUL7XWyRNcRTlcST1Ei7gBQ /Users/USERNAME/.ss

对比GitHub设置中公钥指纹是否一致
https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey
